{"ast":null,"code":"import _objectSpread from \"/Users/chitranjan/Documents/amplecube/react/contactmanager/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/chitranjan/Documents/amplecube/react/contactmanager/src/context.js\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\nconst Context = React.createContext();\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return _objectSpread({}, state, {\n        contacts: state.contacts.filter(contact => contact.id !== action.payload)\n      });\n\n    case \"ADD_CONTACT\":\n      return _objectSpread({}, state, {\n        contacts: [action.payload, ...state.contacts]\n      });\n\n    case \"UPDATE_CONTACT\":\n      return _objectSpread({}, state, {\n        contacts: state.contacts.map(contact => contact.id === action.payload.id)\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      contacts: [],\n      dispatch: action => {\n        this.setState(state => reducer(state, action));\n      }\n    };\n  }\n\n  async componentDidMount() {\n    const res = await axios.get(\"https://jsonplaceholder.typicode.com/users\");\n    this.setState({\n      contacts: res.data\n    });\n  }\n\n  render() {\n    return React.createElement(Context.Provider, {\n      value: this.state,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }, this.props.children);\n  }\n\n}\nexport const Consumer = Context.Consumer;","map":{"version":3,"sources":["/Users/chitranjan/Documents/amplecube/react/contactmanager/src/context.js"],"names":["React","Component","axios","Context","createContext","reducer","state","action","type","contacts","filter","contact","id","payload","map","Provider","dispatch","setState","componentDidMount","res","get","data","render","props","children","Consumer"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,MAAMC,OAAO,GAAGH,KAAK,CAACI,aAAN,EAAhB;;AACA,MAAMC,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AACE,+BACKF,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeC,MAAf,CACRC,OAAO,IAAIA,OAAO,CAACC,EAAR,KAAeL,MAAM,CAACM,OADzB;AAFZ;;AAMF,SAAK,aAAL;AACE,+BACKP,KADL;AAEEG,QAAAA,QAAQ,EAAE,CAACF,MAAM,CAACM,OAAR,EAAiB,GAAGP,KAAK,CAACG,QAA1B;AAFZ;;AAIF,SAAK,gBAAL;AACE,+BACKH,KADL;AAEEG,QAAAA,QAAQ,EAAEH,KAAK,CAACG,QAAN,CAAeK,GAAf,CAAmBH,OAAO,IAAEA,OAAO,CAACC,EAAR,KAAcL,MAAM,CAACM,OAAP,CAAeD,EAAzD;AAFZ;;AAIF;AACE,aAAON,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,OAAO,MAAMS,QAAN,SAAuBd,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACtCK,KADsC,GAC9B;AACNG,MAAAA,QAAQ,EAAE,EADJ;AAENO,MAAAA,QAAQ,EAAET,MAAM,IAAI;AAClB,aAAKU,QAAL,CAAcX,KAAK,IAAID,OAAO,CAACC,KAAD,EAAQC,MAAR,CAA9B;AACD;AAJK,KAD8B;AAAA;;AAQpC,QAAMW,iBAAN,GAA0B;AACxB,UAAMC,GAAG,GAAG,MAAOjB,KAAK,CACvBkB,GADkB,CACd,4CADc,CAAnB;AAGA,SAAKH,QAAL,CAAc;AAAER,MAAAA,QAAQ,EAACU,GAAG,CAACE;AAAf,KAAd;AACD;;AAEHC,EAAAA,MAAM,GAAG;AACP,WACE,oBAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKhB,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKiB,KAAL,CAAWC,QADd,CADF;AAKD;;AArBqC;AAwBxC,OAAO,MAAMC,QAAQ,GAAGtB,OAAO,CAACsB,QAAzB","sourcesContent":["import React, { Component } from \"react\";\nimport axios from \"axios\";\n\nconst Context = React.createContext();\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case \"DELETE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.filter(\n          contact => contact.id !== action.payload\n        )\n      };\n    case \"ADD_CONTACT\":\n      return {\n        ...state,\n        contacts: [action.payload, ...state.contacts]\n      };\n    case \"UPDATE_CONTACT\":\n      return {\n        ...state,\n        contacts: state.contacts.map(contact=>contact.id=== action.payload.id)\n      };\n    default:\n      return state;\n  }\n};\n\nexport class Provider extends Component {\n  state = {\n    contacts: [],\n    dispatch: action => {\n      this.setState(state => reducer(state, action));\n    }\n  };\n\n    async componentDidMount() {\n      const res = await  axios\n      .get(\"https://jsonplaceholder.typicode.com/users\");\n    \n      this.setState({ contacts:res.data});\n    }\n\n  render() {\n    return (\n      <Context.Provider value={this.state}>\n        {this.props.children}\n      </Context.Provider>\n    );\n  }\n}\n\nexport const Consumer = Context.Consumer;\n"]},"metadata":{},"sourceType":"module"}